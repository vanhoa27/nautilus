NautilusIr {
execute() {
Block_0($1:i32):
	$2 = 0 :i32
	$3 = 1 :i32
	$4 = $1 > $3 :bool
	if $4 ? Block_1($1, $2) : Block_2($1, $2) :void

Block_1($1:i32, $2:i32):
	$6 = 1 :i32
	$7 = $2 + $6 :i32
	$8 = 2 :i32
	br Block_11($1, $7, $8) :void

Block_11($1:i32, $2:i32, $8:i32):
	$9 = $1 > $8 :bool
	if $9 ? Block_3($1, $2) : Block_4($1, $2) :void

Block_3($1:i32, $2:i32):
	$11 = 1 :i32
	$12 = $2 + $11 :i32
	$13 = 3 :i32
	br Block_12($1, $12, $13) :void

Block_12($1:i32, $2:i32, $13:i32):
	$14 = $1 > $13 :bool
	if $14 ? Block_5($1, $2) : Block_6($1, $2) :void

Block_5($1:i32, $2:i32):
	$16 = 1 :i32
	$17 = $2 + $16 :i32
	$18 = 4 :i32
	br Block_13($1, $17, $18) :void

Block_13($1:i32, $2:i32, $18:i32):
	$19 = $1 > $18 :bool
	if $19 ? Block_7($1, $2) : Block_8($2, $1) :void

Block_7($1:i32, $2:i32):
	$21 = 1 :i32
	$22 = $2 + $21 :i32
	$23 = 5 :i32
	br Block_14($22, $1, $23) :void

Block_14($2:i32, $1:i32, $23:i32):
	$24 = $1 > $23 :bool
	if $24 ? Block_9($2) : Block_10($2) :void

Block_9($2:i32):
	$26 = 1 :i32
	$27 = $2 + $26 :i32
	br Block_15($27) :void

Block_15($2:i32):
	return ($2) :i32

Block_10($2:i32):
	br Block_15($2) :void

Block_8($2:i32, $1:i32):
	$35 = 5 :i32
	br Block_14($2, $1, $35) :void

Block_6($1:i32, $2:i32):
	$33 = 4 :i32
	br Block_13($1, $2, $33) :void

Block_4($1:i32, $2:i32):
	$31 = 3 :i32
	br Block_12($1, $2, $31) :void

Block_2($1:i32, $2:i32):
	$29 = 2 :i32
	br Block_11($1, $2, $29) :void
}
} //NESIR
